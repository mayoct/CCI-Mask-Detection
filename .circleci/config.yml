version: 2.1

workflows:
  my_workflow:
    jobs:
      - setup_yorov5:
          context:
            - docker
      - setup_maskdataset:
          context:
            - docker
      - train_maskdataset_with_gpu:
          requires:
            - setup_yorov5
            - setup_maskdataset
      - test_detection_with_gpu:
          requires:
            - train_maskdataset_with_gpu
#      - test_detection_with_raspi:
#          requires:
#            - train_maskdataset_with_gpu

jobs:
  setup_yorov5:
    docker:
      - image: cimg/python:3.7.11
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN
    steps:
      - checkout
      - run:
          name: Clone YOLOv5 resources
          command: |
            git clone https://github.com/ultralytics/yolov5
      - persist_to_workspace:
          root: .
          paths:
            - "yolov5"
  setup_maskdataset:
    docker:
      - image: cimg/python:3.7.11
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN
    steps:
      - run:
          name: Set up MaskDataSet from ROBOFLOW(, which needs registration)
          command:  |
            mkdir MaskDataSet
            cd MaskDataSet
            curl -L "https://public.roboflow.com/ds/9rYgiWaqnY?key=$ROBOFLOW_KEY" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip
            echo "train: ../MaskDataSet/train/images" > data.yaml
            echo "val: ../MaskDataSet/valid/images" >> data.yaml
            echo "" >> data.yaml
            echo "nc: 2" >> data.yaml
            echo "names: ['mask', 'no-mask']" >> data.yaml
            cd ..
      - persist_to_workspace:
          root: .
          paths:
            - "MaskDataSet"
  train_maskdataset_with_gpu:
    machine:
      resource_class: gpu.nvidia.small
      image: ubuntu-1604-cuda-10.1:201909-23
    steps:
      - checkout
      - run:
          name: Check GPU status
          command:  nvidia-smi
      - attach_workspace:
          at: .
      - run:
          name: Check if the commit message includes 'kick-training' to continue this job
          command: |
            COMMIT_MESSAGE=$(git log -1 HEAD --pretty=format:%s)
            TRIGGER_MATCH_PATTERN="^.*kick-train.*$"
            if [[ ${COMMIT_MESSAGE} =~ ${TRIGGER_MATCH_PATTERN} ]]; then
              echo "Will start MaskDataSet training."
            else
              echo "Will skip MaskDataSet training."
              circleci-agent step halt
            fi
      - run:
          name: Setup up Python environment for YOLOv5
          command: |
            cd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -
            cd yolov5
            pyenv install 3.7.11
            pyenv local 3.7.11
            pip install -r requirements.txt
            cd ..
      - run:
          name: Train MaskDataSet
          command: |
            cd yolov5
            python train.py --data ../MaskDataSet/data.yaml --cfg yolov5s.yaml --weights yolov5s.pt --batch-size 16 --epochs 100
            cd ..
      - persist_to_workspace:
          root: .
          paths:
            - "yolov5"
            - "MaskDataSet"
  test_detection_with_gpu:
    machine:
      resource_class: gpu.nvidia.small
      image: ubuntu-1604-cuda-10.1:201909-23
    steps:
      - checkout
      - run:
          name: Check GPU status
          command:  nvidia-smi
      - attach_workspace:
          at: .
      - run:
          name: Setup up Python environment for YOLOv5
          command: |
            cd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -
            cd yolov5
            pyenv install 3.7.11
            pyenv local 3.7.11
            pip install -r requirements.txt
            cd ..
      - run:
          name: Test detect.py
          command: |
            cd yolov5
            rm -rf runs/detect
            mkdir -p runs/detect
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 640 --conf 0.25 --source ../images/mask.jpg
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 640 --conf 0.25 --source ../images/no_mask.jpg
            zip -r runs/detect.zip runs/detect
      - store_artifacts:
          path: yolov5/runs/detect.zip
          destination: detect-gpu.zip
  test_detection_with_raspi:
    machine: true
    resource_class: mayoct/raspi-x64-runner
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Setup up Python environment for YOLOv5
          command: |
            cd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -
            cd yolov5
            pyenv install 3.7.11
            pyenv local 3.7.11
            pip install -r requirements.txt
            cd ..
      - run:
          name: Test detect.py
          command: |
            cd yolov5
            rm -rf runs/detect
            mkdir -p runs/detect
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 640 --conf 0.25 --source ../images/mask.jpg
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 640 --conf 0.25 --source ../images/no_mask.jpg
            zip -r runs/detect.zip runs/detect
      - store_artifacts:
          path: yolov5/runs/detect.zip
          destination: detect-raspi.zip
