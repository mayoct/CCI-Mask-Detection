version: 2.1

workflows:
  my_workflow:
    jobs:
      - setup_environment:
          context:
            - docker
      - train_with_gpu:
          requires:
            - setup_environment

jobs:
  setup_environment:
    docker:
      - image: cimg/python3.7.11
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN
    steps:
      - run: |
          git clone https://github.com/ultralytics/yolov5
          cd yolov5
          pyenv install 3.7.6
          pyenv local 3.7.6
          pip install -r requirements.txt
          cd ..
      - run: |
          mkdir MaskDataSet
          cd MaskDataSet
          curl -L "https://public.roboflow.com/ds/9rYgiWaqnY?key=$ROBOFLOW_KEY" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip
          echo "train: ../MaskDataSet/train/images" > data.yaml
          echo "val: ../MaskDataSet/valid/images" >> data.yaml
          echo "" >> data.yaml
          echo "nc: 2" >> data.yaml
          echo "names: ['mask', 'no-mask']" >> data.yaml
          cd ..
      - persist_to_workspace:
          root: .
          paths:
            - "yolov5"
            - "MaskDataSet"
  train_with_gpu:
    machine:
      resource_class: gpu.nvidia.small
      image: ubuntu-1604-cuda-10.1:201909-23
    steps:
      - run: nvidia-smi
      - attach_workspace:
          at: .
      - run: |
          cd yolov5
          pyenv install 3.7.6
          pyenv local 3.7.6
          pip install -r requirements.txt
          cd ..
      - run: |
          cd yolov5
          python train.py --data ../MaskDataSet/data.yaml --cfg yolov5s.yaml --weights yolov5s.pt --batch-size 16 --epochs 10
      - persist_to_workspace:
          root: .
          paths:
            - "yolov5"
            - "MaskDataSet"
